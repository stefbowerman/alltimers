<style>
.mystery-box-grid {
  display: flex;
  flex-direction: column;
  row-gap: 40px;

  margin: 0 0 100px;
}

.mystery-box {
  padding: 0 20px;
  text-align: center;
  font-size: 30px;  
}

.mystery-box a {
  color: #13259c;
}

@media (min-width: 800px) {
  .mystery-box-grid {
    flex-direction: row;
  }

  .mystery-box {
    flex: 0 0 33.33%;
  }  
}

.box-graphic {
  position: relative;

}

.box-back {
  position: absolute;
  z-index: 1;
}

.box-front {
  position: relative;
  z-index: 3;
}

.monster {
  position: absolute;
  z-index: 2;

  overflow: hidden;

  transition: transform 300ms cubic-bezier(0.27, 0.62, 0.22, 0.93);
}

.monster img {
  width: 100%;
  transition: transform 300ms cubic-bezier(0.49, 0.19, 0.28, 0.96)
}

.mystery-box.show-monster .monster {
  transform: scale(1.15);
  transition-delay: 100ms;
}

.mystery-box--2.show-monster .monster {
  transform: scale(1.2);
}

.mystery-box.show-monster .monster img {
  transition: transform 300ms cubic-bezier(0.22, 0.21, 0.11, 0.91);
}

/* Box 1 */
.mystery-box--1 .monster {
  left: 30%;
  right: 26%;
  bottom: 49%;
  top: 0px;
}

.mystery-box--1 .monster img {
  transform: translateY(70%);
}

.mystery-box--1.show-monster .monster img {
  transform: translateY(6%);
}

/* Box 2 */
.mystery-box--2 .monster {
  left: 23%;
  right: 20%;
  bottom: 50%;
  top: -20%;
}

.mystery-box--2 .monster img {
  transform: translateY(102%);
}

.mystery-box--2.show-monster .monster img {
  transform: translateY(17%);
}

/* Box 3 */
.mystery-box--3 .monster {
  left: 15%;
  right: 13%;
  bottom: 50%;
  top: -20%;
}

.mystery-box--3 .monster img {
  transform: translateY(150%);
}

.mystery-box--3.show-monster .monster img {
  transform: translateY(13%);
}


.mystery-header {
  margin: 150px 0;
}

.mystery-header img {
  display: block;
  width: 100%;
  height: auto;
  max-width: 900px;
  padding: 0 5vw;
  margin: 0 auto;
}
</style>

<div>
  <div class="mystery-box-grid">
    {% for block in section.blocks %}
      {% assign p = all_products[block.settings.product] %}
  
      {% if p != blank %}
        <div class="mystery-box mystery-box--{{ forloop.index }}" {{ block.shopify_attributes }}>
          <a href="{{ p.url }}">
            <div class="box-graphic">
              {% assign size = '' %}
              
              {% if forloop.index == 1 %}
                {% assign size = '50' %}
              {% elsif forloop.index == 2 %}
                {% assign size = '75' %}
              {% elsif forloop.index == 3 %}
                {% assign size = '100' %}
              {% endif %}
  
              {% assign back_image = 'Box-back.png' | prepend: size %}
              {% assign front_image = 'Box-front.png' | prepend: size %}
              {% assign monster_image = 'Box-monster.png' | prepend: size %}
  
              <img src="{{ back_image | asset_url }}" loading="eager" class="box-back" />
  
              <div class="monster">
                <img src="{{ monster_image | asset_url }}" loading="eager" />
              </div>
  
              <img src="{{ front_image | asset_url }}" loading="eager" class="box-front" />
            </div>
  
            <span>{{ p.title }}</span>
          </a>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  {% if section.settings.header_image %}
    <div class="mystery-header">
      <img
        src="{{ section.settings.header_image | img_url: '1000x' }}"
        height="{{ section.settings.header_image.height }}"
        width="{{ section.settings.header_image.width }}"
      />
    </div>
  {% endif %}  
</div>

<script type="text/javascript">
  function MysteryBox(el) {
    this.$el = $(el)

    this.isTouch = Modernizr && Modernizr.touch

    // If touch....
    if (this.isTouch) {
      this.loop()
    }
    else {
      this.$el.on('mouseenter', this.onMouseenter.bind(this))
      this.$el.on('mouseleave', this.onMouseleave.bind(this))
      this.startTimeout = setTimeout(this.showAndHideMonster.bind(this), this.getRandomDelay())
    }
  }

  MysteryBox.prototype = {
    getRandomDelay: function() {
      return 1000 * (3 + (Math.random() * 10))
    },
    onMouseenter: function() {
      clearTimeout(this.startTimeout)
      this.showMonster()
    },
    onMouseleave: function() {
      this.hideMonster()
    },
    showMonster: function() {
      this.$el.addClass('show-monster')
    },
    hideMonster: function() {
      this.$el.removeClass('show-monster')
    },
    showAndHideMonster: function(callback) {
      this.showMonster()

      setTimeout(function() {
        this.hideMonster()
        callback && callback()
      }.bind(this), 500)
    },
    loop: function() {
      this.loopTimeout = setTimeout(function() {
        this.showAndHideMonster(this.loop.bind(this))
      }.bind(this), this.getRandomDelay())
    }
  }

  $('.mystery-box').each(function(i, el) {
    var box = new MysteryBox(el)
  })
</script>


{% schema %}
  {
    "name": "Mystery Boxes",
    "max_blocks": 3,
    "settings": [
      {
        "type": "image_picker",
        "id": "header_image",
        "label": "Header Image"
      }
    ],
    "blocks": [
      {
        "type": "mystery_box",
        "name": "Mystery Box",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Product"
          }
        ]
      }
    ]
  }
{% endschema %}